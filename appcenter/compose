version: "3.7"
services:
  intercom-service:
    container_name: intercom-service
    image: artifacts.software-univention.de/nubus-dev/images/intercom-service:2.8.1-pre-jconde-fix-logger
    restart: unless-stopped
    security_opt:
      - seccomp:/etc/docker/seccomp-systemd.json
    networks:
      - intercom
    dns:
@!@
from univention.config_registry import ConfigRegistry
ucr = ConfigRegistry()
ucr.load()
for nameserverUcrName in ('nameserver1', 'nameserver2', 'nameserver3'):
    nameserverIp = ucr.get(nameserverUcrName)
    if nameserverIp and set(nameserverIp):
        print("      - {}".format(nameserverIp))@!@
    ports:
      - 8008:8008
@!@
from univention.config_registry import ConfigRegistry
ucr = ConfigRegistry()
ucr.load()
cert_pem_path = ucr.get('intercom-service/certificates/external/root-ca-pem')
cert_crt_path = ucr.get('intercom-service/certificates/external/root-ca-crt')
if cert_pem_path or cert_crt_path:
    print("    volumes:")
if cert_pem_path:
    print("      - {}:/etc/ssl/certs/rootca.pem:ro".format(cert_pem_path))
if cert_crt_path:
    print("      - {}:/usr/local/share/ca-certificates/rootca.crt:ro".format(cert_crt_path))@!@
    environment:
      # CLIENT
      CLIENT_ID: @%@intercom-service/settings/client-id@%@
      CLIENT_SECRET: @!@
import os
pwdfile="/etc/intercom-client.secret"
with open(pwdfile, 'r') as fd:
    print(fd.read().strip())@!@
      USER_UNIQUE_MAPPER: @%@intercom-service/settings/user-unique-mapper@%@
      USERNAME_CLAIM: @%@intercom-service/settings/username-claim@%@

      # INTERCOM
      SECRET: @!@
import os
pwdfile="/etc/intercom.secret"
with open(pwdfile, 'r') as fd:
    print(fd.read().strip())@!@
      INTERCOM_URL: @%@intercom-service/settings/intercom-url@%@
      BASE_URL: @%@intercom-service/settings/base-url@%@
      PORT: 8008
      LOG_LEVEL: @%@intercom-service/settings/log-level@%@

      # ISSUER
      ISSUER_BASE_URL: @%@intercom-service/settings/issuer-base-url@%@
      KEYCLOAK_URL: @%@intercom-service/keycloak/url@%@
      REALM_NAME: @%@intercom-service/keycloak/realm-name@%@

      # MATRIX
      MATRIX_ENABLED: "@%@intercom-service/matrix/enabled@%@"
      MATRIX_URL: @%@intercom-service/matrix/url@%@
      MATRIX_SERVER_NAME: @%@intercom-service/matrix/server-name@%@
      MATRIX_AS_SECRET: @!@
import os
pwdfile="/etc/matrix.secret"
with open(pwdfile, 'r') as fd:
    print(fd.read().strip())@!@

      # PROXY
      PROXY: "@%@intercom-service/settings/proxy@%@"

      # REDIS
      REDIS_USER: @%@intercom-service/redis/user@%@
      REDIS_HOST: @%@intercom-service/redis/host@%@
      REDIS_PORT: @%@intercom-service/redis/port@%@
      REDIS_PASSWORD: @!@
import os
pwdfile="/etc/intercom-redis.secret"
with open(pwdfile) as fd:
    print(fd.read().strip())@!@

      # NORDECK
      NORDECK_MODE: @%@intercom-service/matrix/nordeck-mode@%@  # test, live, test proxies
      NORDECK_URL: @%@intercom-service/matrix/nordeck-url@%@

      # PORTAL
      PORTAL_URL: @%@intercom-service/portal/url@%@
      PORTAL_API_KEY: @!@
import os
pwdfile="/etc/intercom-portal.secret"
with open(pwdfile, 'r') as fd:
    print(fd.read().strip())@!@

      # NC
      NC_ENABLED: "@%@intercom-service/nextcloud/enabled@%@"
      NC_AUDIENCE: @%@intercom-service/nextcloud/audience@%@
      NC_URL: @%@intercom-service/nextcloud/url@%@
      NC_ORIGIN: @%@intercom-service/nextcloud/origin@%@

      # XWIKI
      XWIKI_ENABLED: "@%@intercom-service/xwiki/enabled@%@"
      XWIKI_URL: @%@intercom-service/xwiki/url@%@
      XWIKI_AUDIENCE: @%@intercom-service/xwiki/audience@%@

      # ORIGIN
      ORIGIN_REGEX: @%@intercom-service/settings/origin-regex@%@

      # EXTERNAL CERTIFICATES
@!@
from univention.config_registry import ConfigRegistry
ucr = ConfigRegistry()
ucr.load()
cert_pem_path = ucr.get('intercom-service/certificates/external/root-ca-pem')
if cert_pem_path:
    print('      NODE_EXTRA_CA_CERTS: "/etc/ssl/certs/rootca.pem"')@!@

  redis-intercom:
    image: redis:6.2-alpine
    restart: always
    networks:
      - intercom
    command: redis-server --save 20 1 --loglevel warning --requirepass @!@
import os
pwdfile="/etc/intercom-redis.secret"
with open(pwdfile) as fd:
    print(fd.read().strip())@!@

networks:
  intercom:
    name: intercom
    external: false
